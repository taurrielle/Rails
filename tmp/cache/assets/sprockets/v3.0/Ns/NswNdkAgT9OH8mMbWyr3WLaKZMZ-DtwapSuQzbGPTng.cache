I"ª(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  DemoApp.Views.Account = (function(superClass) {
    extend(Account, superClass);

    function Account() {
      return Account.__super__.constructor.apply(this, arguments);
    }

    Account.prototype.template = JST['accounts/account'];

    Account.prototype.initialize = function() {
      return this.collection.on('reset', this.render, this);
    };

    Account.prototype.render = function() {
      $(this.el).html(this.template({
        account: this.model,
        currency: this.collection
      }));
      return this;
    };

    return Account;

  })(Backbone.View);

}).call(this);
:ET