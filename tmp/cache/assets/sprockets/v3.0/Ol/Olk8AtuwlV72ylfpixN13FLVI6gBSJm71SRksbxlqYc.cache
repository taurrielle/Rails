I"X(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  DemoApp.Views.AccountsIndex = (function(superClass) {
    extend(AccountsIndex, superClass);

    function AccountsIndex() {
      this.handleError = bind(this.handleError, this);
      this.appendAccount = bind(this.appendAccount, this);
      return AccountsIndex.__super__.constructor.apply(this, arguments);
    }

    AccountsIndex.prototype.template = JST['accounts/index'];

    AccountsIndex.prototype.events = {
      'submit #new_account': 'createAccount',
      'click #account_button': 'showForm'
    };

    AccountsIndex.prototype.initialize = function() {
      this.collection.on('reset', this.render, this);
      this.collection.on('add', this.appendAccount, this);
      this.cur = new DemoApp.Collections.Currencies();
      this.cur.fetch({
        reset: true
      });
      return this.cur.on('reset', this.render, this);
    };

    AccountsIndex.prototype.render = function() {
      $(this.el).html(this.template({
        currency: this.cur
      }));
      this.collection.each(this.appendAccount);
      return this;
    };

    AccountsIndex.prototype.appendAccount = function(account) {
      var view;
      view = new DemoApp.Views.Account({
        model: account,
        collection: this.cur
      });
      return this.$('#accounts').append(view.render().el);
    };

    AccountsIndex.prototype.showForm = function() {
      alert("clicked");
      if ($('#account_form').css('visibility') === 'hidden') {
        return $('#account_form').css('display', 'block');
      } else {
        return $('#account_form').css('display', 'inline-block');
      }
    };

    AccountsIndex.prototype.createAccount = function(event) {
      var attributes;
      event.preventDefault();
      attributes = {
        name: $('#new_account_name').val(),
        balance: $('#new_account_balance').val(),
        currency_id: $('#new_account_currency').val()
      };
      console.log(attributes);
      return this.collection.create(attributes, {
        wait: true,
        success: function() {
          return $('#new_account')[0].reset();
        },
        error: this.handleError
      });
    };

    AccountsIndex.prototype.handleError = function(account, response) {
      var attribute, errors, message, messages, results;
      if (response.status === 422) {
        errors = $.parseJSON(response.responseText).errors;
        results = [];
        for (attribute in errors) {
          messages = errors[attribute];
          results.push((function() {
            var i, len, results1;
            results1 = [];
            for (i = 0, len = messages.length; i < len; i++) {
              message = messages[i];
              results1.push(this.$('#error-container-' + attribute).append('<div class="help-block">' + 'The ' + attribute + ' ' + message + '</div>'));
            }
            return results1;
          }).call(this));
        }
        return results;
      }
    };

    return AccountsIndex;

  })(Backbone.View);

}).call(this);
:ET